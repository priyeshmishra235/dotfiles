return {
  "wolfwfr/vimatrix.nvim",
  opts = {
    auto_activation = {
      screensaver = {
        setup_deferral = 10,
        timeout = 0,
        ignore_focus = false,
        block_on_term = true,
        block_on_cmd_line = true,
      },
      on_filetype = {},
    },
    window = {
      general = {
        background = "#000000", --black
        border = "none",
        blend = 0,
        zindex = 10,
        ignore_cells = nil,
      },
      by_filetype = {
        -- e.g:
        -- snacks_dashboard = {
        --  background = "",
        --  blend = 100,
        -- },
      },
    },
    droplet = {
      max_size_offset = 5,
      timings = {
        max_fps = 15,
        fps_variance = 1,
        glitch_fps_divider = 8,
        max_timeout = 200,
        local_glitch_frame_sharing = false,
        global_glitch_frame_sharing = true,
      },
      random = {
        body_to_tail = 50,
        head_to_glitch = 5,
        head_to_tail = 50,
        kill_head = 150,
        new_head = 30,
      },
    },
    colourscheme = "rainbow",
    -- matrix
    -- rainbow
    -- green
    -- red
    -- orange
    -- blue
    -- cyan
    -- yellow
    -- pink
    -- purple
    highlight_props = {
      bold = true,
      blend = 1, -- quickfix for loss of highlight contrast with window blend;
      -- might be removed if it causes unwanted effects
    },
    alphabet = {
      built_in = {
        "arabic",
        "armenian",
        "armenian_lower",
        "armenian_upper",
        "greek",
        "greek_lower",
        "greek_upper",
        "katakana",
        "latin",
        "latin_lower",
        "latin_upper",
        "russian",
        "russian_lower",
        "russian_upper",
        "sanskrit",
        "binary",
        "decimal",
        "symbols",
      },
      custom = {},
      randomize_on_init = true,
      randomize_on_pick = false,
    },
    logging = {
      print_errors = false,
      log_level = vim.log.levels.DEBUG,
    },
    keys = {
      cancellation = { "<Esc>", "q" },
    },
  }
}
